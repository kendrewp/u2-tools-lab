<!--

       Name    : SBFieldTemplates.xaml
       Author  : Kendrew Peacey
    
       ****************************************************************************
           Maintenence log - insert most recent change descriptions at top
              Module  %M%     Version %I%     Date    %H%
              
-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:rkt="http://schemas.sbxa.com/WPFControls"
                    >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/SBXAWinFxControls;component/Themes/Converters.xaml" />
        <ResourceDictionary Source="/SBXAWinFxControls;component/Themes/BaseSBControlStyle.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- SBImageFieldTemplate -->
    <ControlTemplate x:Key="SBImageFieldTemplate" TargetType="{x:Type rkt:SBField}">
        <Image x:Name="PART_FocusSite"
               Source="{Binding Path=SBValue, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay, Converter={StaticResource SBConverter}}"
               Margin="0"
               rkt:SBUISupport.TemplateName="SBImageFieldTemplate"
               />
    </ControlTemplate>

    <!-- SBNoEchoFieldTemplate -->
    <ControlTemplate x:Key="SBNoEchoFieldTemplate" TargetType="{x:Type rkt:SBField}">
        <!-- The style should bind to the SBField property. -->

        <PasswordBox x:Name="PART_FocusSite"
                     Style="{Binding Path=SBPasswordControlStyle, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                     Margin="0"
                     TabIndex="{Binding Path=TabIndex, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type rkt:ISBField}}, Mode=OneWay}"
                     IsTabStop="{Binding Path=IsTabStop, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                     rkt:SBControl.HasSBFocus="{Binding Path=HasSBFocus, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"     
                     ToolTip="{TemplateBinding ToolTip}"
                     FrameworkElement.Cursor="{TemplateBinding Cursor}"
                     rkt:SBUISupport.TemplateName="SBNoEchoFieldTemplate"
                     >
        </PasswordBox>
        <!--TabIndex="{Binding Path=TabIndex, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"-->

    </ControlTemplate>

    <!-- SBFieldTemplate -->
    <ControlTemplate x:Key="SBFieldTemplate" TargetType="{x:Type rkt:SBField}">
        <!-- I put the binding to the cursor property in here as we do not want them to be able to disable it in a style. -->
        <rkt:SBTextBox x:Name="PART_FocusSite"
                       Style="{Binding Path=(rkt:SBControl.SBControlStyle), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                       FrameworkElement.Cursor="{TemplateBinding Cursor}"
                       MaxLines="1"
                       />
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=SBPlus.SBUserPreferences.ExtendLength, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}" Value="Normal">
                <Setter Property="MaxLength" Value="{Binding Path=(rkt:SBGUIAttribute.SBMaxChar), RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}" TargetName="PART_FocusSite" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=SBPlus.SBUserPreferences.ExtendLength, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}" Value="Extend">
                <Setter Property="MaxLength" Value="0" TargetName="PART_FocusSite" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=SBPlus.SBUserPreferences.ExtendLength, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}" Value="Disable">
                <Setter Property="MaxLength" Value="{Binding Path=GuiObjectDefinition.MaxChars, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}" TargetName="PART_FocusSite" />
            </DataTrigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>

    <!-- SBMemoFieldTemplate -->
    <ControlTemplate x:Key="SBMemoFieldTemplate" >
                <rkt:SBTextBox x:Name="PART_FocusSite"
                               Style="{Binding Path=(rkt:SBControl.SBControlStyle), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                               Text="{Binding Path=SBValue, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,
                                              Converter={StaticResource SBLinefeedConverter}, ConverterParameter=B}"
                               ToolTip="{TemplateBinding ToolTip}"
                               rkt:SBTextBox.CursorPositionInLine="{Binding Path=CursorPosition, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                               rkt:SBControl.HasSBFocus="{Binding Path=HasSBFocus, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                               rkt:SBTextBox.AcceptsReturn="true"
                               TextWrapping="{Binding Path=(rkt:SBField.WordWrap), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay, Converter={StaticResource SBWordWrapConverter}}"
                               Height="{TemplateBinding Height}"
                               Width="{TemplateBinding Width}"
                               VerticalAlignment="{TemplateBinding VerticalAlignment}"
                               CurrentLineIndex="{Binding Path=(rkt:SBField.CurrentLineNumber), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWayToSource}"
                               FrameworkElement.Cursor="{TemplateBinding Cursor}"
                               rkt:SBUISupport.TemplateName="SBMemoFieldTemplate"
                               HorizontalScrollBarVisibility="Auto"
                               VerticalScrollBarVisibility="Visible"
                               />
        <ControlTemplate.Triggers>
            <!-- Only display the tool tip if there is one. -->
            <DataTrigger Binding="{Binding Path=GuiObjectDefinition.HelpString, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay, Converter={StaticResource SBIsNullOrEmptyConverter}}" Value="false">
                <Setter TargetName="PART_FocusSite"  Property="ToolTip" Value="{Binding Path=GuiObjectDefinition.HelpString, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=SBPlus.SBUserPreferences.ExtendLength, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}" Value="Normal">
                <Setter Property="MaxLength" Value="{Binding Path=(rkt:SBGUIAttribute.SBMaxChar), RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}" TargetName="PART_FocusSite" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=SBPlus.SBUserPreferences.ExtendLength, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}" Value="Extend">
                <Setter Property="MaxLength" Value="0" TargetName="PART_FocusSite" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=SBPlus.SBUserPreferences.ExtendLength, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}" Value="Disable">
                <Setter Property="MaxLength" Value="{Binding Path=GuiObjectDefinition.MaxChars, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}" TargetName="PART_FocusSite"/>
            </DataTrigger>
            
            <!-- Only update the MemoText if Indent is on, otherwise SBValue is used -->
            <DataTrigger Binding="{Binding Path=GuiObjectDefinition.Indent, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}" Value="true">
                <Setter TargetName="PART_FocusSite" Property="SBUpdateMemoText" Value="true" />
                <Setter TargetName="PART_FocusSite" Property="SBMemoText" Value="{Binding Path=(rkt:SBField.SBMemoValue), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}" />
            </DataTrigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>