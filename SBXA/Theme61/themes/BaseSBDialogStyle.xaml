<!--

       Name    : BaseSBDialogStyle.xaml
       Author  : Kendrew Peacey
    
       ****************************************************************************
           Maintenence log - insert most recent change descriptions at top
              Module  %M%     Version %I%     Date    %H%
              
-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:rkt="http://schemas.sbxa.com/WPFControls"
                    >
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/SBXAWinFxControls;component/Themes/BaseSBFormStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- DialogWithTextAndPrompt -->
    <ControlTemplate x:Key="DialogWithTextAndPrompt" TargetType="{x:Type rkt:SBDialog}">
            <ContentControl x:Name="SBDialogContentControl"
                            Grid.Row="1" 
                            Grid.Column="1" 
                            Focusable="False"
                            Template="{DynamicResource SBFormWithBorderTemplate}"
                            >
                <ContentControl.InputBindings>
                    <KeyBinding Command="rkt:SBCommands.SBSaveCommand"
                      Key="F2" />
                    <KeyBinding Command="rkt:SBCommands.SBIntuitiveHelpCommand"
                      Key="F3" />
                </ContentControl.InputBindings>
                <Grid x:Name="PART_SBDialogGrid" Margin="10,10,10,10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition  Width="Auto"/>
                        <ColumnDefinition  Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <rkt:SBPrompt Grid.Row="0" 
                                  Margin="1,1,1,1" 
                                  HorizontalContentAlignment="Center"
                                  Grid.Column="0" 
                                  Grid.ColumnSpan="2" 
                                  Focusable="False"
                                  SBValue="{Binding Path=DialogDefinition.DialogText, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" 
                                  />


                    <rkt:SBPrompt Margin="1,1,1,1" 
                                  Grid.Row="1" 
                                  Grid.Column="0" 
                                  Focusable="False"
                                  SBValue="{Binding Path=DialogDefinition.PromptText, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" 
                                  />

                    <rkt:SBField TabIndex="0" Margin="1,1,1,1" Grid.Row="1" Grid.Column="1" 
                                 UsePixelPositioning="{Binding Path=(rkt:SBControl.UsePixelPositioning), RelativeSource={RelativeSource Mode=TemplatedParent }, Mode=OneWay}"  
                                 SBValue="{Binding Path=SBValue, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" 
                                 Width="{Binding Path=TextDimensions.Width, RelativeSource={RelativeSource Mode=TemplatedParent }, Mode=OneWay}"
                                 CursorPosition="{Binding Path=CursorPosition, RelativeSource={RelativeSource Mode=TemplatedParent }, Mode=TwoWay}"
                                 NoEcho="{Binding Path=DialogDefinition.NoEcho, RelativeSource={RelativeSource Mode=TemplatedParent }, Mode=OneWay}"
                                 rkt:SBControl.HasSBFocus="{Binding Path=IsSBFocused, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                />

                    <rkt:SBButtonBar Grid.Column="0" 
                                     Grid.Row="2" 
                                     Grid.ColumnSpan="2" 
                                     Margin="0,5,0,0"
                                     Focusable="False"
                                     UniformButtonSize="True"
                                     Buttons="{Binding Path=DialogDefinition.Buttons, RelativeSource={RelativeSource TemplatedParent}}"
                                     SendResponse="{Binding Path=SendResponse, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay,Converter={StaticResource SBReverseBooleanConverter}}"
                                   />
                </Grid>
            </ContentControl>
    </ControlTemplate>

    <!-- DialogWithPrompt -->
    <ControlTemplate x:Key="DialogWithPrompt" TargetType="{x:Type rkt:SBDialog}">
            <ContentControl x:Name="SBDialogContentControl"
                            Grid.Row="1" 
                            Grid.Column="1" 
                            Focusable="False"
                            Template="{DynamicResource SBFormWithBorderTemplate}"
                            >
                <ContentControl.InputBindings>
                    <KeyBinding Command="rkt:SBCommands.SBSaveCommand"
                      Key="F2" />
                    <KeyBinding Command="rkt:SBCommands.SBIntuitiveHelpCommand"
                      Key="F3" />
                </ContentControl.InputBindings>
                <Grid x:Name="PART_SBDialogGrid" Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition  Width="Auto"/>
                        <ColumnDefinition  Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <rkt:SBPrompt Margin="1" 
                                  Grid.Row="0" 
                                  Grid.Column="0" 
                                  Focusable="False"
                                  SBValue="{Binding Path=DialogDefinition.PromptText, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />

                    <rkt:SBField TabIndex="0" Margin="1" Grid.Row="0" Grid.Column="1" 
                                 UsePixelPositioning="{Binding Path=(rkt:SBControl.UsePixelPositioning), RelativeSource={RelativeSource Mode=TemplatedParent }, Mode=OneWay}"  
                                 SBValue="{Binding Path=SBValue, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" 
                                 Width="{Binding Path=TextDimensions.Width, RelativeSource={RelativeSource Mode=TemplatedParent }, Mode=OneWay}"
                                 CursorPosition="{Binding Path=CursorPosition, RelativeSource={RelativeSource Mode=TemplatedParent }, Mode=TwoWay}"
                                 NoEcho="{Binding Path=DialogDefinition.NoEcho, RelativeSource={RelativeSource Mode=TemplatedParent }, Mode=OneWay}"
                                 rkt:SBControl.HasSBFocus="{Binding Path=IsSBFocused, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                 rkt:SBGUIAttribute.SBParentObjectName="{Binding Path=SBObjectName, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                >
                        <rkt:SBGUIAttribute.SBObjectName>
                            <MultiBinding Converter="{StaticResource SBConcatenateConverter}" ConverterParameter="*">
                                <Binding Path="SBObjectName" RelativeSource="{RelativeSource TemplatedParent}"/>
                                <Binding Path="DependencyProperty.UnsetValue" FallbackValue="0" />
                                <Binding Path="GuiObjectDefinition.Row" FallbackValue="0" />
                            </MultiBinding>
                        </rkt:SBGUIAttribute.SBObjectName>
                    </rkt:SBField>
                    <rkt:SBButtonBar Grid.Column="0" 
                                     Grid.Row="2" 
                                     Grid.ColumnSpan="2" 
                                     Margin="0,10,0,0"
                                     Focusable="False"
                                     UniformButtonSize="True"
                                     Buttons="{Binding Path=DialogDefinition.Buttons, RelativeSource={RelativeSource TemplatedParent}}"
                                     SendResponse="{Binding Path=SendResponse, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay,Converter={StaticResource SBReverseBooleanConverter}}"
                                   />
                </Grid>
            </ContentControl>
    </ControlTemplate>

    <!-- DialogWithNoTextOrPrompt -->
    <ControlTemplate x:Key="DialogWithNoTextOrPrompt" TargetType="{x:Type rkt:SBDialog}">
            <ContentControl x:Name="SBDialogContentControl"
                            Grid.Row="1" 
                            Grid.Column="1" 
                            Focusable="False"
                            Template="{DynamicResource SBFormWithBorderTemplate}"
                            >
                <ContentControl.InputBindings>
                    <KeyBinding Command="rkt:SBCommands.SBSaveCommand" Key="F2" />
                    <KeyBinding Command="rkt:SBCommands.SBIntuitiveHelpCommand" Key="F3" />
                </ContentControl.InputBindings>
                <Grid Margin="5,5,5,5">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition  Width="Auto"/>
                        <ColumnDefinition  Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Control x:Name="PART_SBDialogImage" 
                             Grid.Column="0"
                             Grid.Row="0"
                             HorizontalAlignment="Center"
                             Visibility="Hidden"
                             Width="60"
                             Height="60"
                             Focusable="False"
                             />
                    
                    <Grid Grid.Column="1" Grid.Row="0" VerticalAlignment="Center" Margin="5,10,5,5">
                        
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition  Width="Auto"/>
                            <ColumnDefinition  Width="*"/>
                        </Grid.ColumnDefinitions>
                        
                        <rkt:SBPrompt Grid.Column="0" 
                                      Grid.Row="0" 
                                      HorizontalContentAlignment="Center" 
                                      Margin="1,1,1,1"  
                                      Focusable="False"
                                      SBValue="{Binding Path=DialogDefinition.DialogText, RelativeSource={RelativeSource TemplatedParent}}" />

                        <rkt:SBToggle x:Name="PART_SBToggle" 
                                      Grid.Column="0" 
                                      Grid.Row="1" 
                                      rkt:SBControl.ShouldSendSBCommands="false"
                                      HorizontalAlignment="Center"
                                      Label="{Binding Path=DialogDefinition.CheckBoxlabel, RelativeSource={RelativeSource TemplatedParent}}" 
                                      Visibility="Hidden"
                                      SBValue="{Binding Path=DialogDefinition.CheckBoxState, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                      Margin="0,3,0,0"
                                      />
                    </Grid>
                    
                    <rkt:SBButtonBar Grid.Column="0" 
                                     Grid.Row="1" 
                                     Grid.ColumnSpan="2"
                                     SendResponse="False"
                                     HorizontalAlignment="Center"
                                     UniformButtonSize="True"
                                     ButtonAlignment="Center"
                                     Buttons="{Binding Path=DialogDefinition.Buttons, RelativeSource={RelativeSource TemplatedParent}}"
                                     rkt:SBContentControl.HasSBFocus="{Binding Path=IsSBFocused, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                     Focusable="False"
                                     />

                </Grid>
            </ContentControl>
        
        <ControlTemplate.Triggers>
            <!-- Checks to see if the dialog box has a CheckBox on it. -->
            <DataTrigger Binding="{Binding Path=DialogDefinition.CheckBoxlabel, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource SBIsNullOrEmptyConverter}}" Value="false">
                <Setter TargetName="PART_SBToggle" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <!-- Checks to see if there is an image defined for this dialog box. -->
            <DataTrigger Binding="{Binding Path=DialogDefinition.Image, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource SBIsNullOrEmptyConverter}}" Value="false">
                <Setter TargetName="PART_SBDialogImage" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_SBDialogImage" Property="Template" >
                    <Setter.Value>
                        <ControlTemplate>
                            <Image 
                           Source="{Binding Path=DialogDefinition.Image, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type rkt:SBDialog}}, Mode=OneWay, Converter={StaticResource SBConverter}}"  
                           HorizontalAlignment="Center"
                           />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            
            <!-- I need to check and see if the Dialog.Image is empty, then use the standard controls, based on the type. -->
            
            <!-- Dialog Box -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=DialogDefinition.DialogType, RelativeSource={RelativeSource Mode=Self}}" Value="DialogBox" />
                    <Condition Binding="{Binding Path=DialogDefinition.Image, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource SBIsNullOrEmptyConverter}}" Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_SBDialogImage" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_SBDialogImage" Property="Template" Value="{DynamicResource SBDialogWarningImage}"/>
            </MultiDataTrigger>

            <!-- Error -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=DialogDefinition.DialogType, RelativeSource={RelativeSource Mode=Self}}" Value="Error" />
                    <Condition Binding="{Binding Path=DialogDefinition.Image, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource SBIsNullOrEmptyConverter}}" Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_SBDialogImage" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_SBDialogImage" Property="Template" Value="{DynamicResource SBDialogErrorImage}"/>
            </MultiDataTrigger>
            
            <!-- Information -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=DialogDefinition.DialogType, RelativeSource={RelativeSource Mode=Self}}" Value="Information" />
                    <Condition Binding="{Binding Path=DialogDefinition.Image, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource SBIsNullOrEmptyConverter}}" Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_SBDialogImage" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_SBDialogImage" Property="Template" Value="{DynamicResource SBDialogInformationImage}" />
            </MultiDataTrigger>

            <!-- Warning -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=DialogDefinition.DialogType, RelativeSource={RelativeSource Mode=Self}}" Value="Warning" />
                    <Condition Binding="{Binding Path=DialogDefinition.Image, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource SBIsNullOrEmptyConverter}}" Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_SBDialogImage" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_SBDialogImage" Property="Template" Value="{DynamicResource SBDialogWarningImage}"/>
            </MultiDataTrigger>
            
        </ControlTemplate.Triggers>
        
    </ControlTemplate>

    <Style x:Key="BaseSBDialogStyle" BasedOn="{StaticResource BaseSBFormStyle}" TargetType="{x:Type rkt:SBDialog}" >
        <Setter Property="rkt:SBUISupport.StyleName" Value="BaseSBDialogStyle" />
        <Setter Property="rkt:SBPlus.CloseOpenDialog" Value="{Binding Path=ShouldExit, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="rkt:SBForm.IsClosable" Value="{Binding Path=DialogDefinition.AllowEscape, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}"/>
        <Setter Property="IsCachable" Value="False" />
        <Setter Property="CanHostStatusBar" Value="False" />

        <Style.Triggers>

            <!-- The following trigger checks to see if the user must enter text. -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=HasTextInput, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay }" Value="true" />
                    <Condition Binding="{Binding Path=WillSendSBCommands, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay }" Value="true"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource DialogWithTextAndPrompt}"/>
                <Setter Property="rkt:SBUISupport.TemplateName" Value="DialogWithTextAndPrompt" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=DialogDefinition.DialogText, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay, Converter={StaticResource SBIsNullOrEmptyConverter}}" Value="true" />
                    <Condition Binding="{Binding Path=WillSendSBCommands, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay }" Value="true"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource DialogWithPrompt}"/>
                <Setter Property="rkt:SBUISupport.TemplateName" Value="DialogWithPrompt" />
            </MultiDataTrigger>

            <!-- This trigger checks to see if the user must enter text or not and is used if there is no text to enter. -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=HasTextInput, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay }" Value="false" />
                    <Condition Binding="{Binding Path=WillSendSBCommands, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay }" Value="true"/>
                </MultiDataTrigger.Conditions>

                <Setter Property="Template" Value="{StaticResource DialogWithNoTextOrPrompt}"/>
                <Setter Property="rkt:SBUISupport.TemplateName" Value="DialogWithNoTextOrPrompt" />

            </MultiDataTrigger>

        </Style.Triggers>

    </Style>

</ResourceDictionary>