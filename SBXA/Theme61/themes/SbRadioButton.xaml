<!--

       Name    : SbRadioButton.xaml
       Author  : Kendrew Peacey
       
       ****************************************************************************
           Maintenence log - insert most recent change descriptions at top
Date            Name    Tracking #      Style               Description
Dec 8, 2011     AKP                                         Merged BaseSBRadioStyle into SBRadioStyle.
-->
    <ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:rkt="http://schemas.sbxa.com/WPFControls"
    >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/SBXAWinFxControls;component/Themes/BaseSBRadioButtonStyle.xaml" />
        <ResourceDictionary Source="/SBXAWinFxControls;component/Themes/NoFocusContextMenu.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type rkt:SBRadioButton}" BasedOn="{StaticResource BaseSBRadioButtonStyle}" />

    <Style TargetType="{x:Type rkt:SBRadio}" BasedOn="{StaticResource BaseSBControlStyle}" >
            <Setter Property="rkt:SBUISupport.StyleName" Value="BaseSBRadioStyle" />
            <Setter Property="Control.Margin"            Value="{Binding Path=GuiObjectDefinition.PixelCoordinates, 
                                                                         RelativeSource={RelativeSource Mode=Self},
                                                                         Converter={StaticResource SBMarginConverter},
                                                                         Mode=OneWay
                                                                 }" />

            <Setter Property="Control.VerticalAlignment" Value="Top"/>
            <Setter Property="Control.HorizontalAlignment" Value="Left"/>
            <Setter Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}" />
            <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
            <Setter Property="rkt:SBControl.SBControlStyle" Value="{DynamicResource SBRadioButtonStyle}" />
            <Setter Property="rkt:SBControl.SBFocusControlStyle" Value="{DynamicResource SBRadioButtonStyle}" />
            <Setter Property="SBFocusContentTemplate" Value="{DynamicResource SBRadioButtonFocusContentTemplate}" />
            <!-- Moved to BaseSBControlStyle (SBXA-3877, kp 1/27/11)      <Setter Property="IsEditable" Value="{Binding Path=(rkt:SBGUIAttribute.SBEditable), RelativeSource={RelativeSource Mode=Self}, Mode=TwoWay, Converter={StaticResource SBConverter}}" />-->

            <Setter Property="FieldTemplate">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type rkt:SBRadio}">
                        <ItemsControl
                        Focusable="False" 
                        ItemsSource="{TemplateBinding ItemsSource}" 
                        Height="{TemplateBinding Control.Height}"
                        Width="{TemplateBinding Control.Width}"
                        x:Name="PART_FocusSite"
                        Style="{DynamicResource SBRadioStyle}"
                        >
                            <ItemsControl.Template>
                                <ControlTemplate TargetType="ItemsControl">
                                    <Border BorderBrush="{TemplateBinding Border.BorderBrush}"
                                        BorderThickness="{TemplateBinding Border.BorderThickness}"
                                        Background="{TemplateBinding Panel.Background}"
                                        SnapsToDevicePixels="True"
                                        Padding="1,1,1,1">
                                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                    </Border>
                                </ControlTemplate>
                            </ItemsControl.Template>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <!-- ? Does this Orientation need to follow a Priority Binding like in  -->
                                    <!-- BaseSBControlStyle.xaml's rkt:SBControl.TextAlignment for example? -->
                                    <StackPanel Orientation="{Binding Path=GuiObjectDefinition.Direction, 
                                                RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type rkt:SBRadio}},
                                                Mode=OneWay, 
                                                Converter={StaticResource SBOrientationConverter}}"
                                                HorizontalAlignment="Left" 
                                                VerticalAlignment="Top"
                                                Background="{Binding Path=Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type rkt:SBRadio}}}"
                                />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemContainerStyle>
                                <Style>
                                    <Setter Property="Control.Margin" Value="0"/>
                                </Style>
                            </ItemsControl.ItemContainerStyle>

                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <rkt:SBRadioButton RadioButtonDefinition="{Binding Path=RadioButtonDefinition}"
                                                       GuiObjectDefinition="{Binding Path=GuiObjectDefinition}"
                                                       rkt:SBControlDefinition.IsFocusedItem="{Binding Path=IsFocusedItem}"
                                                       rkt:SBControl.HasSBFocus="{Binding Path=IsFocusedItem}"
                                                       rkt:SBControl.SBControlStyle="{Binding Path=SBControlStyle, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type rkt:SBRadio}}}"
                                                       SBFocusContentTemplate="{Binding Path=SBFocusContentTemplate, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type rkt:SBRadio}}}"
                                                       rkt:SBGUIAttribute.SBObjectName="{Binding Path=(rkt:SBGUIAttribute.SBObjectName)}"
                                                       rkt:SBGUIAttribute.SBParentObjectName="{Binding Path=(rkt:SBControl.SBParentObjectName), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type rkt:SBRadio}}}"
                                                       IsEditable="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type rkt:SBRadio}}}" 
                                                       />
                                    <!-- Changed the binding from GuiObjectDefinition.Editable to the parent as the parent will have the correct fallback. (SBXA-3877, kp 1/27/11) -->
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding Path=GuiObjectDefinition.HelpString, 
                             RelativeSource={RelativeSource Mode=Self}, Mode=OneWay, Converter={StaticResource SBIsNullOrEmptyConverter}}" Value="false">
                                <Setter TargetName="PART_FocusSite"  Property="ToolTip" Value="{Binding Path=GuiObjectDefinition.HelpString, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Template" Value="{Binding Path=FieldTemplate, RelativeSource={RelativeSource Mode=Self}}"/>

            <Style.Triggers>

            <Trigger Property="rkt:SBControl.HasSBFocus" Value="True" >
                    <Setter Property="ContextMenu" Value="{Binding Path=GuiObjectDefinition.ContextMenuDefinition,
                                                   RelativeSource={RelativeSource Mode=Self}, Mode=OneWay,
                                                   Converter={StaticResource SBContextMenuConverter},
                                                   ConverterParameter=Field}" />
                </Trigger>

                <Trigger Property="rkt:SBControl.HasSBFocus" Value="False" >
                    <Setter Property="ContextMenu" Value="{StaticResource NoFocusContextMenu}" />
                </Trigger>
            </Style.Triggers>


    </Style>

</ResourceDictionary>