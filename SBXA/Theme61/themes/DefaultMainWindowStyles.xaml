<!--

       Name    : DefaultMainWindowStyles.xaml
       Author  : Kendrew Peacey
       
       ****************************************************************************
           Maintenence log - insert most recent change descriptions at top

Date            Name    Tracking #      Style                               Description
    
August 11, 2011 AKP     SBXA-4209       DefaultSBMainWindowTitleStyle       Changed Label to TextBlock so the '_' could be displayed.
05/12/2011                                                                  Moved definitions
                                                                                   DefaultSBMainwinBackgroundStyle
                                                                                   DefaultBorderRectangleStyle
                                                                               here, and out of the theme-specific files
                                                                               /themes/*SBPlusTheme/SBPlusTheme.Resources.xaml, 
                                                                               so they can be resolved from within DefaultStyles.xaml.
              
-->
<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:rkt="http://schemas.sbxa.com/WPFControls" xmlns:Runtime="clr-namespace:SBXA.Runtime;assembly=SBXARuntime">
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/SBXAWinFxControls;component/Themes/Converters.xaml" />
        <ResourceDictionary Source="/SBXAWinFxControls;component/Themes/SbControl.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- DefaultSBCloseButtonStyle -->
    <Style x:Key="DefaultSBCloseButtonStyle" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid  Cursor="Hand">
                        <Border x:Name="PART_SBButtonBorder" Background="{DynamicResource CloseButtonBorder}"/>
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                              RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="PART_SBButtonBorder" Value="{DynamicResource CloseButtonMouseOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="PART_SBButtonBorder" Value="{DynamicResource CloseButtonDown}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DefaultSBMaximizeButtonStyle -->
    <Style x:Key="DefaultSBMaximizeButtonStyle" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid  Cursor="Hand">
                        <Border x:Name="PART_SBButtonBorder" Background="{DynamicResource MaximizeButtonBorder}"/>
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="PART_SBButtonBorder" Value="{DynamicResource MaximizeButtonMouseOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="PART_SBButtonBorder" Value="{DynamicResource MaximizeButtonDown}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DefaultSBMaximizedButtonStyle -->
    <Style x:Key="DefaultSBMaximizedButtonStyle" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid  Cursor="Hand">
                        <Border x:Name="PART_SBButtonBorder" Background="{DynamicResource MaximizedButtonBorder}"/>
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="PART_SBButtonBorder" Value="{DynamicResource MaximizedButtonMouseOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="PART_SBButtonBorder" Value="{DynamicResource MaximizedButtonDown}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DefaultSBMinimizeButtonStyle -->
    <Style x:Key="DefaultSBMinimizeButtonStyle" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid  Cursor="Hand">
                        <Border x:Name="PART_SBButtonBorder" Background="{DynamicResource MinimizeButtonBorder}"/>
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="PART_SBButtonBorder" Value="{DynamicResource MinimizeButtonMouseOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="PART_SBButtonBorder" Value="{DynamicResource MinimizeButtonDown}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DefaultSBMainWindowTitleStyle -->
    <Style x:Key="DefaultSBMainWindowTitleStyle" TargetType="{x:Type Control}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid HorizontalAlignment="Stretch" x:Name="PART_SBWindowTitleGrid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="5"/>
                        </Grid.ColumnDefinitions>
                        <!-- SBXA-4209 Changed the Label to a TextBlock so that the '_' could be visible, otherwise it was not displayed as it is -->
                        <!-- used to indicate a Access Key.                                                                                       -->
                        <TextBlock x:Name="PART_SBWindowTitlePort" Grid.Column="1" 
                                   Text="{Binding Path=SBWindowTitle.Port, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=rkt:SBPlus}}" 
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   />
                        <TextBlock x:Name="PART_SBWindowTitleAccount" Grid.Column="3" 
                                   Text="{Binding Path=SBWindowTitle.Account, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=rkt:SBPlus}}" 
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   />
                        <TextBlock x:Name="PART_SBWindowTitleSystemId" Grid.Column="5" 
                                   Text="{Binding Path=SBWindowTitle.SystemId, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=rkt:SBPlus}}" 
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   />
                        <TextBlock x:Name="PART_SBWindowTitleTitle" Grid.Column="6" 
                                   Text="{Binding Path=SBWindowTitle.Title, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=rkt:SBPlus}}" 
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   />
                        <TextBlock x:Name="PART_SBWindowTitleDate" Grid.Column="7" 
                                   Text="{Binding Path=SBWindowTitle.Date, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=rkt:SBPlus}}" 
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Center"
                                   />

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DefaultSBPlusTitleStyle -->
    <Style x:Key="DefaultSBPlusTitleStyle" TargetType="{x:Type Control}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <DockPanel LastChildFill="True">
                        <Image Source="/SBXAWinFxControls;component/GenericImages\im_brand.ico" DockPanel.Dock="Left" HorizontalAlignment="Left" x:Name="PART_IBMLogo" Margin="8,4,0,0" VerticalAlignment="Top" />
                        <Grid DockPanel.Dock="Right" HorizontalAlignment="Right" x:Name="PART_SBWindowStates" Margin="0,0,5,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Button Grid.Column="0"
                                    ToolTip="{Binding Converter={StaticResource SBLanguageConverter}, ConverterParameter=MinimizeSBXA}"
                                    Width="18" Height="18"
                                    x:Name="PART_SBMinimizeButton"
                                    Style="{DynamicResource SBMinimizeButtonStyle}" Margin="1,1,1,1" IsTabStop="False" Command="rkt:SBCommands.MinimizeMainWindowCommand"/>
                            <Button Grid.Column="1"
                                    ToolTip="{Binding Converter={StaticResource SBLanguageConverter}, ConverterParameter=MaximizeSBXA}"
                                    Width="18" Height="18"
                                    x:Name="PART_SBMaximizeButton"
                                    Style="{DynamicResource SBMaximizeButtonStyle}" Margin="1,1,1,1" IsTabStop="False" Command="rkt:SBCommands.MaximizeMainWindowCommand"/>
                            <Button Grid.Column="2"
                                    ToolTip="{Binding Converter={StaticResource SBLanguageConverter}, ConverterParameter=CloseSBXA}"
                                    Width="18" Height="18"
                                    x:Name="PART_SBCloseButton"
                                    Style="{DynamicResource SBCloseButtonStyle}" Margin="1,1,1,1" IsTabStop="False" Command="rkt:SBCommands.CloseMainWindowCommand"/>
                        </Grid>
                        <Control x:Name="PART_SBMainWindowTitle" DockPanel.Dock="Left" Style="{DynamicResource SBMainWindowTitleStyle}" HorizontalAlignment="Stretch" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=WindowState, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type rkt:SBMainWindow}}}"                                     
                                     Value="Maximized">
                            <Setter TargetName="PART_SBMaximizeButton" Property="Style" Value="{DynamicResource SBMaximizedButtonStyle}" />
                            <Setter TargetName="PART_SBMaximizeButton" Property="ToolTip" Value="{Binding Converter={StaticResource SBLanguageConverter}, ConverterParameter=RestoreNormalSBXA}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DefaultMainSBPlusContainerStyle -->
    <Style x:Key="DefaultMainSBPlusContainerStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="rkt:SBUISupport.StyleName" Value="DefaultMainSBPlusContainerStyle" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="ContextMenu" 
                Value="{Binding Source={x:Static rkt:SBPlus.Current}, Mode=OneWay,
                                Path=GuiClickMenuDefinition,
                                Converter={StaticResource SBContextMenuConverter}, 
                                ConverterParameter=MainWindowContextMenu}" />
        <Style.Triggers>
            <!-- Window -->
            <DataTrigger Binding="{Binding Path=UIDeploymentVehicle, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=rkt:SBPlus}, Mode=OneWay}" Value="Windows">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContentControl}">
                            <Grid x:Name="PART_SBMainSBPlusContainer"
                                  rkt:SBUISupport.TemplateName="inline in DefaultMainSBPlusContainerStyle"
                                  Opacity="1" 
                                  Background="{DynamicResource GrayMainWindowBorder}">
                                <Border HorizontalAlignment="Stretch" 
                                        x:Name="PART_SBMainWindowHeaderBorder" 
                                        VerticalAlignment="Top" 
                                        Width="Auto" 
                                        Height="25" 
                                        BorderBrush="#FFE4E4E4" 
                                        BorderThickness="1,1,1,0" 
                                        CornerRadius="5,5,0,0">
                                    <Control x:Name ="PART_SBPlusTitle" Style="{DynamicResource SBPlusTitleStyle}" />
                                </Border>

                                <Border Margin="3,26,3,3" >
                                    <Grid>
                                        <ContentPresenter />

                                    </Grid>
                                </Border>

                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <!-- Browser -->
            <DataTrigger Binding="{Binding Path=UIDeploymentVehicle, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=rkt:SBPlus}, Mode=OneWay}" Value="Browser">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContentControl}">
                            <ContentPresenter />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <!-- *************************************************** -->
    <!-- STYLE: DefaultBorderRectangleStyle                  -->
    <!-- Description: Blue border background                 -->
    <!-- *************************************************** -->
    <Style x:Key="DefaultBorderRectangleStyle" TargetType="{x:Type Rectangle}">
        <Setter Property="StrokeEndLineCap" Value="Round" />
        <Setter Property="StrokeThickness" Value="1"  />
        <Setter Property="RadiusX" Value="7.5"  />
        <Setter Property="RadiusY" Value="7.5"  />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch"  />
        <Setter Property="Width" Value="Auto"  />
        <Setter Property="Height" Value="Auto"  />
        <Setter Property="Rectangle.BitmapEffect">
            <Setter.Value>
                <DropShadowBitmapEffect Opacity="0.3" ShadowDepth="8" Color="#FF051650"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Fill" Value="{Binding Path=(rkt:SBForm.FormBorderColor), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Runtime:ISBForm}}}" />
<!--
        <Setter Property="Rectangle.Fill">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.738,0.989" StartPoint="0.279,0.018">
                    <GradientStop Color="#FF3B9DD1" Offset="1"/>
                    <GradientStop Color="#FF73C5F0" Offset="0"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
-->
        <Setter Property="Rectangle.Stroke">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.512,1.002" StartPoint="0.508,0.007">
                    <GradientStop Color="#FF0F4679" Offset="1"/>
                    <GradientStop Color="#FF168AB2" Offset="0"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *************************************************** -->
    <!-- STYLE: DefaultSBMainwinBackgroundStyle              -->
    <!-- *************************************************** -->
    <Style x:Key="DefaultSBMainwinBackgroundStyle" TargetType="{x:Type Control}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Focusable="False" >
                        <Grid.Background>
                            <PriorityBinding FallbackValue="{x:Static SystemColors.WindowBrush}">
                                <Binding Path="(rkt:SBGUIAttribute.SBBackground)" Converter="{StaticResource SBColorConverter}" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type rkt:SBPlus}}" Mode="OneWay" />
                                <Binding Path="(rkt:SBControl.SBControlBackground)" Mode="OneWay" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type rkt:SBPlus}}"/>
                            </PriorityBinding>
                        </Grid.Background>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>