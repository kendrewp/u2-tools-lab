<!--

       Name    : BaseSBSeparatorStyle.xaml
       Author  : Kendrew Peacey
       
       ****************************************************************************
           Maintenence log - insert most recent change descriptions at top
              Module  %M%     Version %I%     Date    %H%
              
-->
<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:rkt="http://schemas.sbxa.com/WPFControls"
    xmlns:sbp="http://schemas.sbxa.com/WPFControls"
  >
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/SBXAWinFxControls;component/Themes/Converters.xaml" />
        <ResourceDictionary Source="/SBXAWinFxControls;component/Themes/BaseSBControlStyle.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="SBHorizontalSeparatorTemplate" TargetType="{x:Type rkt:SBSeparator}">
            <!--<Separator x:Name="PART_SBSeparator" Margin="0" VerticalAlignment="Center" Style="{Binding Path=SBControlStyle, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />-->
        <Rectangle x:Name="PART_SBSeparator" Margin="0" Style="{Binding Path=SBControlStyle, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
    </ControlTemplate>
    
    <ControlTemplate x:Key="SBVerticalSeparatorTemplate" TargetType="{x:Type rkt:SBSeparator}">
            <Rectangle x:Name="PART_SBSeparator" Margin="0" Style="{Binding Path=SBControlStyle, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
    </ControlTemplate>

    <Style x:Key="BaseSBSeparatorStyle" BasedOn="{StaticResource BaseSBControlStyle}" TargetType="{x:Type rkt:SBSeparator}">
        
        <Style.Triggers>
            <!-- If we are using character coloumn and row positioning, I need to set the margin to 0, so as to allow the grid row and column to position the field -->
            <!-- Use the margin from the GuiObjectDefinition to position the control. -->
            <DataTrigger Binding="{Binding Path=(rkt:SBControl.UsePixelPositioning), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type rkt:ISBForm}}, Mode=OneWay }" Value="true">
                <Setter Property="Control.VerticalAlignment" Value="Top"/>
                <Setter Property="Control.HorizontalAlignment" Value="Left"/>
            </DataTrigger>

            <!-- If we are using character column and row, null out the width and height add derrive the margin from the character layout control which uses the cell width
                 and height to determin the margin. -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(rkt:SBControl.UsePixelPositioning), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type rkt:ISBForm}}, Mode=OneWay }" Value="false"/>
                    <Condition Binding="{Binding Path=GuiObjectDefinition.Direction, RelativeSource={RelativeSource Mode=Self}}" Value="Horizontal"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Control.Width" Value="NaN"/>
                <Setter Property="Control.Height" Value="NaN"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="rkt:SBCharacterLayout.CharacterColumnCount" Value="{Binding Path=GuiObjectDefinition.Coordinates.Length, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}" />
                <Setter Property="rkt:SBCharacterLayout.CharacterRowCount" Value="1" />
                
            </MultiDataTrigger>
            
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(rkt:SBControl.UsePixelPositioning), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type rkt:ISBForm}}, Mode=OneWay }" Value="false"/>
                    <Condition Binding="{Binding Path=GuiObjectDefinition.Direction, RelativeSource={RelativeSource Mode=Self}}" Value="Vertical"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Control.Width" Value="NaN"/>
                <Setter Property="Control.Height" Value="NaN"/>
                <!--<Setter Property="Margin" Value="{Binding Path=CellCenterMargin, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type rkt:SBCharacterLayout}}}"/>-->
                <Setter Property="Margin" Value="0"/>
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="rkt:SBCharacterLayout.CharacterColumnCount" Value="{Binding Path=GuiObjectDefinition.Coordinates.Length, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}" />
                <!--<Setter Property="rkt:SBCharacterLayout.CharacterRowCount" Value="{Binding Path=GuiObjectDefinition.Coordinates.Depth, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}" />-->
            </MultiDataTrigger>

            <!--<DataTrigger Binding="{Binding Path=(rkt:SBControl.UsePixelPositioning), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type rkt:ISBForm}}, Mode=OneWay }" Value="false">
                <Setter Property="Control.Width" Value="NaN"/>
                <Setter Property="Control.Height" Value="NaN"/>
                <Setter Property="Margin" Value="{Binding Path=CellCenterMargin, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type rkt:SBCharacterLayout}}}"/>
            </DataTrigger>-->

            <DataTrigger Binding="{Binding Path=GuiObjectDefinition.Direction, RelativeSource={RelativeSource Mode=Self}}" Value="Horizontal">
                <Setter Property="rkt:SBControl.SBControlStyle" Value="{DynamicResource SBHorizontalSeparatorStyle}" />
                <Setter Property="Template" Value="{DynamicResource SBHorizontalSeparatorTemplate}" />
            </DataTrigger>
            
            <DataTrigger Binding="{Binding Path=GuiObjectDefinition.Direction, RelativeSource={RelativeSource Mode=Self}}" Value="Vertical">
                <Setter Property="rkt:SBControl.SBControlStyle" Value="{DynamicResource SBVerticalSeparatorStyle}" />
                <Setter Property="Template" Value="{DynamicResource SBVerticalSeparatorTemplate}" />
            </DataTrigger>

        </Style.Triggers>
    </Style>

</ResourceDictionary>