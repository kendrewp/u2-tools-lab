<!--
       
       Name    : Converters.xaml
       Author  : Kendrew Peacey
       
       ****************************************************************************
           Maintenence log - insert most recent change descriptions at top
              Module  %M%     Version %I%     Date    %H%
              
-->
<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sbp="http://schemas.sbxa.com/WPFControls"
    xmlns:rkt="http://schemas.sbxa.com/WPFControls"
    xmlns:sbconv="clr-namespace:SBXA.UI.WPFControls.Converters"
    xmlns:sbx="clr-namespace:SBXA.UI.WPFControls.SBXceed"
    >

    <rkt:SBBooleanConverter x:Key="SBBooleanConverter"/>

    <rkt:SBReverseBooleanConverter x:Key="SBReverseBooleanConverter"/>

    <rkt:SBMarginConverter x:Key="SBMarginConverter"/>

    <rkt:SBFontConverter x:Key="SBFontConverter" />
    
    <rkt:SBFontToIDConverter x:Key="SBFontToIDConverter" />    

    <rkt:OrientationTypeConverter x:Key="OrientationTypeConverter" />

    <rkt:MenuTypeTypeConverter x:Key="SBMenuTypeConverter" />

    <rkt:SBListConverter x:Key="SBListConverter" />

    <rkt:CompareConverter x:Key="CompareConverter" />

    <rkt:SBLanguageConverter x:Key="SBLanguageConverter" />

    <rkt:SBMultiValueConverter x:Key="SBMultiValueConverter" />

    <rkt:SBColumnAndRowConverter x:Key="SBColumnAndRowConverter" />

    <rkt:IntToMonthConverter x:Key="IntToMonthConverter" />

    <rkt:SBColorConverter x:Key="SBColorConverter"/>

    <!-- Converts an SB+ Visible value to a Visibility value. -->
    <rkt:SBDrawableConverter x:Key="SBDrawableConverter"/>

    <rkt:SBPixelConverter x:Key="SBPixelConverter"/>

    <rkt:SBCoordinatesToMarginConverter x:Key="SBCoordinatesToMarginConverter" />
    
    <rkt:SBDimensionsConverter x:Key="SBDimensionsConverter"/>
    
    <rkt:SBDimensionsMultiConverter x:Key="SBDimensionsMultiConverter"/>
    
    <rkt:SBLeftRelativeToMainConverter x:Key="SBLeftRelativeToMainConverter" />
    <rkt:SBTopRelativeToMainConverter x:Key="SBTopRelativeToMainConverter" />

    <rkt:SBXceedItemConverter x:Key="SBXceedItemConverter"/>

    <rkt:SBIsNullConverter x:Key="SBIsNullConverter"/>

    <rkt:SBGenericConverter x:Key="SBConverter"/>

    <rkt:SBIsNullOrEmptyConverter x:Key="SBIsNullOrEmptyConverter"/>

    <rkt:SBCompareConverter x:Key="SBCompareConverter"/>

    <rkt:SBSelectionModeConverter x:Key="SBSelectionModeConverter"/>

    <rkt:SBXColumnConverter x:Key="SBXColumnConverter"/>

    <rkt:SBBorderWidthConverter x:Key="SBBorderWidthConverter"/>

    <rkt:SBLinefeedConverter x:Key="SBLinefeedConverter"/>
    
    <rkt:SBWordWrapConverter x:Key="SBWordWrapConverter"/>

    <rkt:SBConcatenateConverter x:Key="SBConcatenateConverter"/>
    
    <rkt:SBObjectNameConverter x:Key="SBObjectNameConverter"/>

    <rkt:SBGridWidthCalculatorConverter x:Key="SBGridWidthCalculatorConverter"/>
    
    <rkt:SBGridHeightCalculatorConverter x:Key="SBGridHeightCalculatorConverter"/>
    
    <!-- Converts an SBXA.Shared.Definitions.SeparatorDirection -->
	<!-- to a System.Windows.Controls.Orientation value.              -->
    <rkt:SBOrientationConverter x:Key="SBOrientationConverter"/>
	
	<rkt:SBTextAlignmentConverter x:Key="SBTextAlignmentConverter"/> <!-- Converts a Justification to a TextAlignment value for the purposes of justification. -->

    <!-- Converts horizontal and vertical alignment to a SBString -->
    <rkt:SBTextAlignmentMultiConverter x:Key="SBTextAlignmentMultiConverter"/>
    
    <rkt:StringToRichTextConverter x:Key="StringToRichTextConverter"/>
    
    <rkt:SBXamlConverter x:Key="SBXamlConverter"/>

    <!-- Converter to convert a null into DependencyProperty.UnsetValue -->
    <rkt:SBUnsetValueConverter x:Key="SBUnsetValueConverter"/>


    <!-- Converter to convert true into DependencyProperty.UnsetValue -->
    <rkt:SBUnsetTrueConverter x:Key="SBUnsetTrueConverter"/>

    <!-- Converter to convert false into DependencyProperty.UnsetValue -->
    <rkt:SBUnsetFalseConverter x:Key="SBUnsetFalseConverter"/>

    <!-- Converter to convert a null or Double.NAN into DependencyProperty.UnsetValue -->
    <rkt:SBUnsetDoubleConverter x:Key="SBUnsetDoubleConverter"/>

    <rkt:SBTypeTypeConverter x:Key="SBTypeTypeConverter"/>
    
    <rkt:SBButtonTextToRichContentConverter x:Key="SBButtonTextToRichContentConverter"/>

    <rkt:SBButtonTextToAccessKeyConverter x:Key="SBButtonTextToAccessKeyConverter"/>

    <rkt:SBMenuItemTextToRichContentConverter x:Key="SBMenuItemTextToRichContentConverter"/>

    <rkt:SBMenuItemUnderlineConverter x:Key="SBMenuItemUnderlineConverter"/>

    <rkt:SBExpressionConverter x:Key="SBExpressionConverter" />
    
    <rkt:SBBoolToStretchConverter x:Key="SBBoolToStretchConverter" />

    <!-- Converter checks to see if the value in the second element in the array is the tru value is the ToggleDefinition in the first element in the array. -->
    <rkt:SBIsToggleCheckedConverter x:Key="SBIsToggleCheckedConverter" />
    
    <rkt:SBComboBoxValueConverter x:Key="SBComboBoxValueConverter" />

    <rkt:SBGetChildrenConverter x:Key="SBGetChildrenConverter" />
    
    <rkt:SBContextMenuConverter x:Key="SBContextMenuConverter" />
    
    <rkt:SBStyleNameConverter x:Key="SBStyleNameConverter" />
    
    <!-- Convert that will provide a way to pass a parameter to a SB+ process, when using the rkt:SBCommands.ExecuteSBPlusProcessCommand -->
    <rkt:SBProcessNameConverter x:Key="SBProcessNameConverter" />
    <!-- Convert that will provide a way to pass parameters to a SB+ process, when using the rkt:SBCommands.ExecuteSBPlusProcessCommand -->
    <rkt:SBMultipleParameterConverter x:Key="SBMultipleParameterConverter" />
    
    
    <rkt:SBTileConverter x:Key="SBTileConverter" />

    <rkt:SBColumnCounterConverter x:Key="SBColumnCounterConverter" />

    <rkt:SBCharacterColumnConverter x:Key="SBCharacterColumnConverter" />
    
    <!-- Converters specific to Xceed components -->
    <rkt:SBXRowHeightConverter x:Key="SBXRowHeightConverter"/>
    
    <!-- Converter to check if the values contains Rich text -->
    <rkt:SBCheckForRichTextConverter x:Key="SBCheckForRichTextConverter"/>

    <rkt:SBBoolToDockConverter x:Key="SBBoolToDockConverter" />
    <rkt:SBBoolToVisibilityConverter x:Key="SBBoolToVisibilityConverter" />

    <!-- Converts character count to device independent pixels. -->
    <rkt:SBCharCountConverter x:Key="SBCharCountConverter" />

    <rkt:SBBitmapTransparentConverter x:Key="SBBitmapTransparentConverter" />

    <rkt:SBDebugConverter x:Key="SBDebugConverter"/>

    <rkt:SBUnsetNegativeIntConverter x:Key="SBUnsetNegativeIntConverter" />

    <!-- Converts from a double to a string in the form nn%-->
    <rkt:SBPercentConverter x:Key="SBPercentConverter" />
    
    <rkt:SBScrollViewerVisibilityConverter x:Key="SBScrollViewerVisibilityConverter" />

    <rkt:SBRadioButtonTextToRichContentConverter x:Key="SBRadioButtonTextToRichContentConverter" />

    <rkt:SBSlashComboBoxItemConverter x:Key="SBSlashComboBoxItemConverter"/>

    <rkt:SBBoolToOpacityConverter x:Key="SBBoolToOpacityConverter"/>

</ResourceDictionary>