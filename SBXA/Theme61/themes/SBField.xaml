<!--

       Name    : SBField.xaml
       Author  : Kendrew Peacey
       
       ****************************************************************************
           Maintenence log - insert most recent change descriptions at top

Date            Name    Tracking #      Style               Description
Oct 26, 2011    AKP     SBXA-4555                           Moved the enabling of the spell check down to the focus trigger, so it only works when a field has focus.

-->
<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:rkt="http://schemas.sbxa.com/WPFControls">
  
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/SBXAWinFxControls;component/Themes/Converters.xaml" />
        <ResourceDictionary Source="/SBXAWinFxControls;component/Themes/BaseSBControlStyle.xaml"/>
        <ResourceDictionary Source="/SBXAWinFxControls;component/Themes/SBFieldTemplates.xaml" />
        <ResourceDictionary Source="/SBXAWinFxControls;component/Themes/NoFocusContextMenu.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type rkt:SBField}" BasedOn="{StaticResource BaseSBControlStyle}" >
        <Setter Property="rkt:SBUISupport.StyleName" Value="Generic SBField Style" />
        <Setter Property="rkt:SBControl.SBControlStyle" Value="{DynamicResource SBTextBoxStyle}" />
        <Setter Property="SBPasswordControlStyle" Value="{DynamicResource DefaultSBPasswordStyle}" />
        <Setter Property="Control.VerticalAlignment" Value="Top"/>
        <Setter Property="Control.HorizontalAlignment" Value="Left"/>

        <Setter Property="rkt:SBField.GuiObjectType" Value="{Binding Path=GuiObjectDefinition.GuiObjectType, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}" />
        <Setter Property="FieldTemplate" Value="{DynamicResource SBFieldTemplate}"/>
        <Setter Property="FieldFocusControlStyle" Value="{DynamicResource SBFocusTextBoxStyle}"/>
        <Setter Property="MemoFieldTemplate" Value="{DynamicResource SBMemoFieldTemplate}"/>
        <Setter Property="ImageFieldTemplate" Value="{DynamicResource SBImageFieldTemplate}"/>
        <Setter Property="NoEchoFieldTemplate" Value="{DynamicResource SBNoEchoFieldTemplate}"/>
        <Setter Property="rkt:SBGUIAttribute.SBMaxChar" Value="{Binding Path=GuiObjectDefinition.MaxChars, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}" />
        <!-- Mapping from server attribute names to XUI properties -->
        <Setter Property="rkt:SBGUIAttribute.SBAttributeMap">
            <Setter.Value>
                <rkt:SBAttributeMap>
                    <rkt:SBAttribute Name="style_name"
                                     GetProperty="(rkt:SBGUIAttribute.SBStyleName)"
                                     SetProperty="(rkt:SBGUIAttribute.SBStyleName)" />
                    <rkt:SBAttribute Name="drawable"
                                     GetProperty="(rkt:SBGUIAttribute.SBDrawable)"
                                     SetProperty="(rkt:SBGUIAttribute.SBDrawable)" />
                    <rkt:SBAttribute5 Name="font"
                                     GetProperty="Control.FontFamily"
                                     GetProperty2="Control.FontSize"
                                     GetProperty3="Control.FontWeight"
                                     GetProperty4="Control.FontStyle"
                                     GetProperty5="(rkt:SBControl.TextDecorations)"
                                     GetConverter5="{StaticResource SBFontToIDConverter}"
                                     SetProperty="(rkt:SBGUIAttribute.SBFont)" />
                    <rkt:SBAttribute Name="background"
                                     GetProperty="Control.Background" GetConverter="{StaticResource SBColorConverter}"
                                     SetProperty="(rkt:SBGUIAttribute.SBBackground)"/>
                    <rkt:SBAttribute Name="foreground" 
                                     GetProperty="Control.Foreground" GetConverter="{StaticResource SBColorConverter}"
                                     SetProperty="(rkt:SBGUIAttribute.SBForeground)"/>
                    <rkt:SBAttribute Name="coordinates"
                                     GetProperty="Control.Margin"
                                     GetConverter="{StaticResource SBCoordinatesToMarginConverter}"
                                     SetProperty="(rkt:SBGUIAttribute.SBCoordinates)"/>
                    <rkt:SBAttribute Name="object_name"
                                     GetProperty="(rkt:SBGUIAttribute.SBObjectName)"
                                     SetProperty="(rkt:SBGUIAttribute.SBObjectName)" />
                    <rkt:SBAttribute2 Name="dimensions"
                                     GetProperty="Control.ActualWidth"
                                     GetProperty2="Control.ActualHeight"
                                     GetConverter2="{StaticResource SBDimensionsMultiConverter}"
                                     SetProperty="(rkt:SBGUIAttribute.SBDimensions)"/>
                    <rkt:SBAttribute2 Name="justification"
                                     GetProperty="Control.HorizontalContentAlignment"
                                     GetProperty2="Control.VerticalContentAlignment"
                                     GetConverter2="{StaticResource SBTextAlignmentMultiConverter}"
                                     SetProperty="(rkt:SBGUIAttribute.SBJustification)"/>
                    <rkt:SBAttribute Name="password"
                                     GetProperty="NoEcho"
                                     GetConverter="{StaticResource SBBooleanConverter}"
                                     SetProperty="(rkt:SBGUIAttribute.SBPassword)" />
                    <!-- Added for SBXA-3501 -->
                    <rkt:SBAttribute Name="emphasized"
                                     GetProperty="(rkt:SBGUIAttribute.SBEmphasized)"
                                     SetProperty="(rkt:SBGUIAttribute.SBEmphasized)" />

                    <!-- As above, but they are not currently used in out styles -->
                    <rkt:SBAttribute Name="border_color"
                                     GetProperty="(rkt:SBGUIAttribute.SBBorderColor)"
                                     SetProperty="(rkt:SBGUIAttribute.SBBorderColor)" />
                    <rkt:SBAttribute Name="border_style"
                                     GetProperty="(rkt:SBGUIAttribute.SBBorderStyle)"
                                     SetProperty="(rkt:SBGUIAttribute.SBBorderStyle)" />
                    <rkt:SBAttribute Name="border_width"
                                     GetProperty="(rkt:SBGUIAttribute.SBBorderWidth)"
                                     SetProperty="(rkt:SBGUIAttribute.SBBorderWidth)" />

                    <rkt:SBAttribute Name="string"
                                     GetProperty="(rkt:SBGUIAttribute.SBString)"
                                     SetProperty="(rkt:SBGUIAttribute.SBString)"/>

                    <rkt:SBAttribute Name="scale_bmp"
                                     GetProperty="(rkt:SBGUIAttribute.SBScaleBmp)"
                                     SetProperty="(rkt:SBGUIAttribute.SBScaleBmp)"/>

                    <rkt:SBAttribute Name ="help_string"
                                     GetProperty="(rkt:SBGUIAttribute.SBHelpString)"
                                     SetProperty="(rkt:SBGUIAttribute.SBHelpString)"/>

                    <!-- Added for eCase 12661*USA (kp June 15, 2010) -->
                    <rkt:SBAttribute Name ="editable"                                     
                                     GetProperty="(rkt:SBGUIAttribute.SBEditable)" 
                                     SetProperty="(rkt:SBGUIAttribute.SBEditable)"/>

                    <rkt:SBAttribute Name ="max_chars"                                     
                                     GetProperty="(rkt:SBGUIAttribute.SBMaxChar)" 
                                     SetProperty="(rkt:SBGUIAttribute.SBMaxChar)"/>

                    <!-- Obsolete properties -->
                    <rkt:SBAttribute Name="input_flag" Supported="Obsolete" />

                </rkt:SBAttributeMap>
            </Setter.Value>
        </Setter>

        <!-- ************************************ -->
        <!--                NoEcho                 -->
        <!-- ************************************ -->
        <Setter Property="NoEcho">
            <Setter.Value>
                <PriorityBinding>
                    <Binding Path="(rkt:SBGUIAttribute.SBPassword)"  Mode="OneWay" Converter="{StaticResource SBBooleanConverter}" RelativeSource="{RelativeSource Mode=Self}"/>
                    <Binding Path="GuiObjectDefinition.NoEcho" Mode="OneWay" RelativeSource="{RelativeSource Mode=Self}"/>
                </PriorityBinding>
            </Setter.Value>
        </Setter>

        <Style.Triggers>

            <!-- if the NoEcho property on the GuiObjectDefinition is not set, then use a SBTextBox. -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="NoEcho" Value="False" />
                    <Condition Property="rkt:SBField.GuiObjectType" Value="Textclass" />
                </MultiTrigger.Conditions>
                <Setter Property="rkt:SBControl.SBFocusControlStyle" Value="{Binding Path=FieldFocusControlStyle, RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="Template" Value="{Binding Path=FieldTemplate, RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="rkt:SBUISupport.TemplateName" Value="Path=FieldTemplate" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="NoEcho" Value="False" />
                    <Condition Property="rkt:SBField.GuiObjectType" Value="Label" />
                </MultiTrigger.Conditions>
                <Setter Property="rkt:SBControl.SBFocusControlStyle" Value="{Binding Path=FieldFocusControlStyle, RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="Template" Value="{Binding Path=FieldTemplate, RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="rkt:SBUISupport.TemplateName" Value="Path=FieldTemplate" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="NoEcho" Value="False" />
                    <Condition Property="rkt:SBField.GuiObjectType" Value="Memo" />
                </MultiTrigger.Conditions>
                <Setter Property="rkt:SBControl.SBControlStyle" Value="{DynamicResource SBEditTextBoxStyle}" />
                <Setter Property="rkt:SBControl.SBFocusControlStyle" Value="{DynamicResource SBFocusEditTextBoxStyle}"/>
                <Setter Property="rkt:SBField.WordWrap" Value="{Binding Path=GuiObjectDefinition.WordWrap, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}" />
                <Setter Property="Template" Value="{Binding Path=MemoFieldTemplate, RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="rkt:SBUISupport.TemplateName" Value="Path=MemoFieldTemplate" />
            </MultiTrigger>

            <!-- if the NoEcho property on the GuiObjectDefinition is set, then use a password box. -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="NoEcho" Value="True" />
                    <Condition Property="rkt:SBField.GuiObjectType" Value="Textclass" />
                </MultiTrigger.Conditions>
                <Setter Property="Template" Value="{Binding Path=NoEchoFieldTemplate, RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="rkt:SBUISupport.TemplateName" Value="Path=NoEchoFieldTemplate" />
            </MultiTrigger>

            <Trigger Property="rkt:SBField.GuiObjectType" Value="Image">
                <Setter Property="Template" Value="{Binding Path=ImageFieldTemplate, RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="rkt:SBUISupport.TemplateName" Value="Path=ImageFieldTemplate" />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="NoEcho" Value="False" />
                    <Condition Property="rkt:SBField.GuiObjectType" Value="MultiValueField" />
                </MultiTrigger.Conditions>
                <Setter Property="rkt:SBControl.SBFocusControlStyle" Value="{Binding Path=FieldFocusControlStyle, RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="Template" Value="{Binding Path=FieldTemplate, RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="rkt:SBUISupport.TemplateName" Value="Path=FieldTemplate" />
            </MultiTrigger>

            <Trigger Property="rkt:SBControl.HasSBFocus" Value="True" >
                <Setter Property="ContextMenu" Value="{Binding Path=GuiObjectDefinition.ContextMenuDefinition,
                                               RelativeSource={RelativeSource Mode=Self}, Mode=OneWay,
                                               Converter={StaticResource SBContextMenuConverter},
                                               ConverterParameter=Field}" />
                <!-- SBXA-153 Enabled spell check via a property on the server, which will be set on SBField. -->
                <!-- SBXA-4555 Moved the enabling of the spell check down here so it only works when a field has focus.  -->
                <Setter Property="IsSpellCheckEnabled" Value="{Binding Path=GuiObjectDefinition.IsSpellCheckEnabled, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}" />
            </Trigger>

            <Trigger Property="rkt:SBControl.HasSBFocus" Value="False" >
                <Setter Property="ContextMenu" Value="{StaticResource NoFocusContextMenu}" />
            </Trigger>

        </Style.Triggers>
    </Style>


</ResourceDictionary>